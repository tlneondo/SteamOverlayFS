
function unmountFinalOverlays(){
    local params=("$@")
    finalMountPoints=${params[0]}
    lengthOver=${#finalMountPoints[*]}

    for ((k=0; k < lengthOver; k++ )); do
        sudo systemctl --runtime mask "$(systemd-escape -p --suffix=automount ${finalMountPoints[$k]})"
    done    

    echo "Unmounting overlay mount poitns" | systemd-cat -t sysDSyncSteamb4Shutdown

    for mountPoint in "${finalMountPoints[@]}"; do
        if mountpoint -q "$mountPoint"; then
            sudo sync
            sudo sync
            sudo umount "$mountPoint"
            if [[ $? -ne 0 ]]; then
                echo "Failed to unmount $mountPoint, exiting" | systemd-cat -t sysDSyncSteamb4Shutdown

                #unmask & restore filesystems
                for ((k=0; k < lengthOver; k++ )); do
                    sudo systemctl --runtime unmask "$(systemd-escape -p --suffix=automount ${finalMountPoints[$k]})"
                    sudo mount -a && sudo systemctl daemon-reload && sudo systemctl restart local-fs.target
                    sudo sync
                    sudo sync
                done

                exit 1
            fi
        else
            echo "$mountPoint is already unmounted, skipping unmount" | systemd-cat -t sysDSyncSteamb4Shutdown
        fi
    done
    sudo sync
    sudo sync
}

function remountReadOnlyFS(){
    local params=("$@")
    ntfsROLocations=${params[0]}
    UUIDS=${params[1]}

    echo "Unmounting RO NTFS mount POINTS" | systemd-cat -t sysDSyncSteamb4Shutdown

    for mountPoint in "${ntfsROLocations[@]}"; do
        if mountpoint -q "$mountPoint"; then
            sudo umount "$mountPoint"
            if [[ $? -ne 0 ]]; then
                echo "Failed to unmount $mountPoint, exiting" | systemd-cat -t sysDSyncSteamb4Shutdown
                exit 1
            fi
        else
            echo "$mountPoint is not mounted, skipping unmount" | systemd-cat -t sysDSyncSteamb4Shutdown
        fi
    done
}

function reloadFromFSTAB(){
    sudo mount -a && sudo systemctl daemon-reload && sudo systemctl restart local-fs.target
}
